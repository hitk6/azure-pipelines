# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

# jobs: 
# - deployment: VMRunCommadn
#   displayName: RunCommand
#   environment:
#      name: dev
#      resourceType: CITIMP
  # strategy:
  #     rolling:
  #       deploy:
  #         steps:
          # - task: AzureCLI@2
          #   inputs:
          #     scriptType: 'ps'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: 'az version'


jobs:
# Running Azure DevOps extension commands on a hosted Mac agent
- job:
  steps:
  # Updating the python version available on the linux agent
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  # Updating pip to latest
  - script: python -m pip install --upgrade pip
    displayName: 'Upgrade pip'

  # Updating to latest Azure CLI version.
  - script: pip install --pre azure-cli --extra-index-url https://azurecliprod.blob.core.windows.net/edge
    displayName: 'upgrade azure cli'

  - script: az --version
    displayName: 'Show Azure CLI version'

  - script: az extension add -n azure-devops
    displayName: 'Install Azure DevOps Extension'

  - script: echo ${AZURE_DEVOPS_CLI_PAT} | az login
  # - script: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
    env:
      AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
    displayName: 'Login Azure DevOps Extension'

  - script: az devops configure --defaults organization=https://dev.azure.com/RLocman project="VMConnect" --use-git-aliases true
    displayName: 'Set default Azure DevOps organization and project'

  - script: |
      az vm run-command invoke -g devops_demo -n CITEMP --command-id RunShellScript --scripts "date"
      az pipelines build list
      git pr list
    displayName: 'VM run-command'